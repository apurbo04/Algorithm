#include <bits/stdc++.h>
using namespace std;
const int N = 1e5+5;
vector<int> v[N];
int dis[N];
bool vis[N];

void bfs(int src)
{
        queue<int> q;
        q.push(src);
        vis[src] = true;
        dis[src] = 0;
        while (!q.empty())
        {
                int par = q.front();
                q.pop();
                for (int child : v[par])
                {
                        if (!vis[child])
                        {
                                q.push(child);
                                vis[child] = true;
                                dis[child] = dis[par] + 1;
                        }
                }
        }
}
int main()
{
        int n, e;
        cin >> n >> e;
        while (e--)
        {
                int a, b;
                cin >> a >> b;
                v[a].push_back(b);
                v[b].push_back(a);
        }
        int x, y, k;
        cin >> x >> y >> k;
        memset(vis, false, sizeof(vis));
        memset(dis, -1, sizeof(dis));
        bfs(x);
        if (dis[y] != -1 && (k * 2) >= dis[y])
                cout << "YES";
        else
                cout << "NO";

        return 0;
}
